#!/bin/bash

sleep 30

echo "!!! Start of provisioner script !!!"

JENKINS_GPG_KEY_URL="https://pkg.jenkins.io/debian-stable/jenkins.io.key"
JENKINS_DEB_PKG_URL="https://pkg.jenkins.io/debian-stable"
VBOX_DEB_PKG_URL="https://download.virtualbox.org/virtualbox/6.0.24/virtualbox-6.0_6.0.24-139119~Debian~buster_amd64.deb"
VBOX_DEB_PKGNAME="$(basename $VBOX_DEB_PKG_URL)"
JENKINS_DEPENDENCIES=(
    openjdk-11-jdk
)
# TODO(conner@conneracrosby.tech): see about stacking shell provisioners together? e.g. all of them do run apt-get update, why not just make like a base shell provisioner?
# NOTE: sudo and gnupg are required. gnupg for dealing
# with package public key pairs.
SYSTEM_DEPENDENCIES=(
    sudo
    gnupg
    git
    wget 
)

# normal VM updating, upgrading distro pkgs
echo "$SSH_PASSWORD" | sudo --stdin apt-get update
echo "$SSH_PASSWORD" | sudo --stdin apt-get dist-upgrade --assume-yes

# NOTE: debian is notorious for not having /sbin (any variant,
# e.g. /usr/sbin/) in the PATH, so will add it for reap2sow1
{
    echo ""
    echo "export PATH=\${PATH}:/usr/sbin"
} >> "${HOME}/.bashrc"

echo "!!! Setting up jenkins !!!"

# running as root, install several pkgs and assign reap2sow1 to sudo group
# NOTES: SYSTEM_DEPENDENCIES are not project dependents, some are 
# mainly nice to haves on the system. Also, sudo may or may not exist 
# on the system already (with me as part of the group). Will
# still run steps incase.
echo "$SSH_PASSWORD" | sudo --stdin apt-get install "${JENKINS_DEPENDENCIES[@]}" "${SYSTEM_DEPENDENCIES[@]}" --assume-yes
echo "$SSH_PASSWORD" | sudo --stdin usermod --append --groups sudo reap2sow1

# install jenkins from stable release
wget --output-document - "$JENKINS_GPG_KEY_URL" | sudo apt-key add -
# NOTE: this is one case where sudo cannot expect the password to come from stdin, 
# betting on sudo just not asking for the password again
echo "deb $JENKINS_DEB_PKG_URL binary/" | sudo tee --append "/etc/apt/sources.list.d/jenkins.list"
echo "$SSH_PASSWORD" | sudo --stdin apt-get update
echo "$SSH_PASSWORD" | sudo --stdin apt-get install jenkins --assume-yes
echo "$SSH_PASSWORD" | sudo --stdin systemctl start jenkins

echo "!!! End setting up jenkins !!!"

# install kernel headers for current kernel
echo "$SSH_PASSWORD" | sudo --stdin apt-get install linux-headers-"$(uname -r)" --assume-yes

# install virtualbox
wget --output-document "$VBOX_DEB_PKGNAME" "$VBOX_DEB_PKG_URL"
echo "$SSH_PASSWORD" | sudo --stdin apt-get install "./${VBOX_DEB_PKGNAME}" --assume-yes

# install few aliases
cat << _EOF_ > /home/reap2sow1/.bash_aliases
    alias egrep='egrep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias grep='grep --color=auto'
    alias l='ls -CF'
    alias la='ls -A'
    alias ll='ls -alF'
    alias ls='ls --color=auto'
_EOF_

# packerbuilds.conf MAY contain env vars from build env
wget "http://$PACKER_HTTP_ADDR/packerbuilds.conf"
echo "$SSH_PASSWORD" | sudo --stdin mv ./packerbuilds.conf /etc/

echo "!!! End of provisioner script !!!"

exit 0
