#!/bin/bash
#
# Shell script for packer's shell-local provisioner.

sleep 30

echo "!!! Start of local provisioner script !!!"

# constants
PROGRAM_NAME="$(basename "$0")"

# turn off VM to add needed vnics besides the first one
vboxmanage controlvm "${VM_NAME}" poweroff

# wait a few seconds before attempting to modify VM settings
sleep 15

# hostonlyadapter<N> does not mean the 'N'th hostonlyif. Rather
# <N> in this case represents the vnic number (e.g. hostonlyadapter<N> 
# means the 'N'th vnic).
vboxmanage modifyvm "${VM_NAME}" --nic2 hostonly --hostonlyadapter2 "${NIC2_HOSTONLYIF_NAME}"
vboxmanage startvm "${VM_NAME}" --type headless

# get sequential vnic MAC addresses (e.g. MACADDRESS1 should be for nic1)
mac_addresses="$(vboxmanage showvminfo "${VM_NAME}" -machinereadable | grep '^macaddress*' | tr '[:lower:]' '[:upper:]')"

# To know who added what to the provisioner's config file. Assumes the local
# shell provisioner is ran at a packer build root dir.
{ 
    echo ""
    echo "# added by ${PROGRAM_NAME}"
} >> "${PWD}/http/${SHELL_PROVISIONERS_CONFIG_FILE}"

# We do want the shell to perform field splitting here!
for mac_address in $mac_addresses; do
    # mac_address should look like MACADDRESS1=1A2B3C4D5E6F
    echo "export ${mac_address}" >> "${PWD}/http/${SHELL_PROVISIONERS_CONFIG_FILE}"
done

echo "!!! End of local provisioner script !!!"

exit 0
