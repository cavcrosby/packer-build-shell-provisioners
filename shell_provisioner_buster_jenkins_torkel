#!/bin/bash
#
# Shell script for packer's shell provisioner.

sleep 30

echo "!!! Start of provisioner script !!!"

# TODO(cavcrosby): currently this installs Jenkins as a service on the VM.
# Really, this probably would be best served to be a build node VM for this
# 'type' of Jenkins instance (torkel).

# constants
JENKINS_GPG_KEY_URL="https://pkg.jenkins.io/debian-stable/jenkins.io.key"
JENKINS_DEB_PKG_URL="https://pkg.jenkins.io/debian-stable"
VBOX_DEB_PKG_URL="https://download.virtualbox.org/virtualbox/6.1.22/virtualbox-6.1_6.1.22-144080~Debian~buster_amd64.deb"
JENKINS_DEPENDENCIES=(
    openjdk-11-jdk
)

vbox_deb_pkgname="$(basename ${VBOX_DEB_PKG_URL})"

# sudo and gnupg are required. gnupg for dealing
# with package public key pairs.
SYSTEM_DEPENDENCIES=(
    git
    gnupg
    linux-headers-"$(uname --kernel-release)"
    sudo
    wget 
)

# normal VM updating, upgrading distro pkgs
echo "${SSH_PASSWORD}" | sudo --stdin apt-get update
echo "${SSH_PASSWORD}" | sudo --stdin apt-get dist-upgrade --assume-yes

# Debian is notorious for not having /sbin (any variant,
# e.g. /usr/sbin/) in the PATH, so will add it for SSH_USER.
{
    echo ""
    cat << _EOF_
# added by ${PROGRAM_NAME}
export PATH=\${PATH}:/usr/sbin
_EOF_
} >> "${HOME}/.bashrc"

echo "!!! Setting up Jenkins !!!"

# SYSTEM_DEPENDENCIES are not project dependents, some are 
# mainly nice to haves on the system. Also, sudo may or may not exist 
# on the system already (with me as part of the group). Will
# still run steps incase.
echo "${SSH_PASSWORD}" | sudo --stdin apt-get install "${JENKINS_DEPENDENCIES[@]}" "${SYSTEM_DEPENDENCIES[@]}" --assume-yes
echo "${SSH_PASSWORD}" | sudo --stdin usermod --append --groups sudo "${SSH_USER}"

# install jenkins from stable release
wget --output-document - "${JENKINS_GPG_KEY_URL}" | sudo apt-key add -
# This is one case where sudo cannot expect the password to come from stdin,
# betting on sudo just not asking for the password again.
echo "deb ${JENKINS_DEB_PKG_URL} binary/" | sudo tee --append "/etc/apt/sources.list.d/jenkins.list"
echo "${SSH_PASSWORD}" | sudo --stdin apt-get update
echo "${SSH_PASSWORD}" | sudo --stdin apt-get install jenkins --assume-yes
echo "${SSH_PASSWORD}" | sudo --stdin systemctl start jenkins

echo "!!! End setting up Jenkins !!!"

# install virtualbox
wget --output-document "${vbox_deb_pkgname}" "${VBOX_DEB_PKG_URL}"
echo "${SSH_PASSWORD}" | sudo --stdin apt-get install "${PWD}/${vbox_deb_pkgname}" --assume-yes

# install few aliases
cat << _EOF_ > "${HOME}/.bash_aliases"
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias ls='ls --color=auto'
_EOF_

# packerbuilds.conf MAY contain env vars from build env
wget "http://${PACKER_HTTP_ADDR}/packerbuilds.conf"
echo "${SSH_PASSWORD}" | sudo --stdin mv "${PWD}/packerbuilds.conf" "/etc/"

echo "!!! End of provisioner script !!!"

exit 0
